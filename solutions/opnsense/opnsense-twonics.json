{
  "$schema": "https://schema.management.azure.com/schemas/2019-04-01/deploymentTemplate.json#",
  "contentVersion": "1.0.0.0",
  "parameters": {
    "virtualMachineSize": {
      "type": "string",
      "defaultValue": "Standard_B2s",
      "metadata": {
        "description": "VM size, please choose a size which allow 2 NICs."
      }
    },
    "virtualNetworkRgName": {
        "type": "string"
    },
    "virtualNetworkName": {
      "type": "string",
      "defaultValue": "OPN-VNET",
      "metadata": {
        "description": "Virtual Nework Name. This is a required parameter to build a new VNet or find an existing one."
      }
    },
    "existingUntrustedSubnetName": {
      "type": "string",
      "defaultValue": "",
      "metadata": {
        "description": "Untrusted-Subnet Name. Only required if you want to use an existing VNet and Subnet."
      }
    },
    "existingTrustedSubnetName": {
      "type": "string",
      "defaultValue": "",
      "metadata": {
        "description": "Trusted-Subnet Name. Only required if you want to use an existing VNet and Subnet."
      }
    },
    "PublicIPAddressSku": {
      "type": "string",
      "defaultValue": "Standard",
      "allowedValues": [
        "Basic",
        "Standard"
      ],
      "metadata": {
        "description": "Specify Public IP SKU either Basic (lowest cost) or Standard (Required for HA LB)\""
      }
    },
    "Location": {
      "type": "string",
      "defaultValue": "[resourceGroup().location]"
    }
  },
  "variables": {
    "virtualMachineName": "NVA",
    "TempUsername": "azureuser",
    "TempPassword": "[guid(subscription().id, resourceGroup().id)]",
    "publicIPAddressName": "[format('{0}-PIP', variables('virtualMachineName'))]",
    "OpnScriptURI": "https://raw.githubusercontent.com/jdmsft/arm/main/solutions/opnsense/config/nva/",
    "ShellScriptName": "configureopnsense.sh",
    "ShellScriptObj": {
        "value": {
            "OpnScriptURI": "[variables('OpnScriptURI')]",
            "OpnType": "TwoNics",
            "TrustedSubnetName": "[resourceId(parameters('virtualNetworkRgName'), 'Microsoft.Network/virtualNetworks/subnets', parameters('virtualNetworkName'), parameters('existingTrustedSubnetName'))]",
            "WindowsSubnetName": "",
            "publicIPAddress": "",
            "opnSenseSecondarytrustedNicIP": ""
        }
    }
  },
  "resources": [
    {
        "type": "Microsoft.Network/publicIPAddresses",
        "apiVersion": "2021-02-01",
        "name": "[variables('publicIPAddressName')]",
        "location": "[parameters('location')]",
        "sku": "[parameters('PublicIPAddressSku')]",
        "properties": {
            "publicIPAllocationMethod": "Static"
        }
    },
    {
        "type": "Microsoft.Network/networkInterfaces",
        "apiVersion": "2022-05-01",
        "name": "[concat(variables('virtualMachineName'),'-NIC-WAN')]",
        "location": "[parameters('Location')]",
        "properties": {
            "enableIPForwarding": true,
            "ipConfigurations": [
                {
                    "name": "ipconfig1",
                    "properties": {
                        "subnet": {
                            "id": "[resourceId(parameters('virtualNetworkRgName'), 'Microsoft.Network/virtualNetworks/subnets', variables('virtualMachineName'), parameters('existingUntrustedSubnetName'))]"
                        },
                        "privateIPAllocationMethod": "Dynamic",
                        "publicIPAddress": {
                            "id": "[resourceId('Microsoft.Network/publicIPAddresses', variables('publicIPAddressName'))]"
                        }
                    }
                }
            ]
        },
        "dependsOn": [
            "[resourceId('Microsoft.Network/publicIPAddresses', variables('publicIPAddressName'))]"
        ]
    },
    {
        "type": "Microsoft.Network/networkInterfaces",
        "apiVersion": "2022-05-01",
        "name": "[concat(variables('virtualMachineName'),'-NIC-LAN')]",
        "location": "[parameters('Location')]",
        "properties": {
            "enableIPForwarding": true,
            "ipConfigurations": [
                {
                    "name": "ipconfig1",
                    "properties": {
                        "subnet": {
                            "id": "[resourceId(parameters('virtualNetworkRgName'), 'Microsoft.Network/virtualNetworks/subnets', variables('virtualMachineName'), parameters('existingTrustedSubnetName'))]"
                        },
                        "privateIPAllocationMethod": "Dynamic"
                    }
                }
            ]
        }
    },
    {
        "type": "Microsoft.Compute/virtualMachines",
        "apiVersion": "2021-03-01",
        "name": "[variables('virtualMachineName')]",
        "location": "[parameters('Location')]",
        "properties": {
            "osProfile": {
                "computerName": "[variables('virtualMachineName')]",
                "adminUsername": "[variables('TempUsername')]",
                "adminPassword": "[variables('TempPassword')]"
            },
            "hardwareProfile": {
                "vmSize": "[parameters('virtualMachineSize')]"
            },
            "storageProfile": {
                "osDisk": {
                    "name": "[concat(variables('virtualMachineName'),'-OSDisk')]",
                    "createOption": "FromImage"
                },
                "imageReference": {
                    "publisher": "thefreebsdfoundation",
                    "offer": "freebsd-13_0",
                    "sku": "13_0-release",
                    "version": "latest"
                }
            },
            "networkProfile": {
                "networkInterfaces": [
                    {
                        "id": "[resourceId('Microsoft.Network/networkInterfaces', concat(variables('virtualMachineName'),'-NIC-LAN'))]"
                    },
                    {
                        "id": "[resourceId('Microsoft.Network/networkInterfaces', concat(variables('virtualMachineName'),'-NIC-WAN'))]"
                    }
                ]
            },
        "plan": {
            "name": "13_0-release",
            "publisher": "thefreebsdfoundation",
            "product": "freebsd-13_0"
        },
        "dependsOn": [
            "[resourceId('Microsoft.Network/networkInterfaces', concat(variables('virtualMachineName'),'-NIC-LAN'))]",
            "[resourceId('Microsoft.Network/networkInterfaces', concat(variables('virtualMachineName'),'-NIC-WAN'))]"
        ]
    },
    {
        "type": "Microsoft.Compute/virtualMachines/extensions",
        "apiVersion": "2015-06-15",
        "name": "[format('{0}/CustomScript', variables('virtualMachineName'))]",
        "location": "[parameters('Location')]",
        "properties": {
            "publisher": "Microsoft.OSTCExtensions",
            "type": "CustomScriptForLinux",
            "typeHandlerVersion": "1.5",
            "autoUpgradeMinorVersion": false,
            "settings": {
                "fileUris": [
                    "[format('{0}{1}', variables('OPNScriptURI'), variables('ShellScriptName'))]"
                ],
                "commandToExecute": "[format('sh {0} {1} {2} {3} {4} {5} {6}', variables('ShellScriptName'), variables('ShellScriptObj').OpnScriptURI, variables('ShellScriptObj').OpnType, if(not(empty(variables('ShellScriptObj').TrustedSubnetName)), reference(resourceId('Microsoft.Network/virtualNetworks/subnets', split(variables('ShellScriptObj').TrustedSubnetName, '/')[0], split(variables('ShellScriptObj').TrustedSubnetName, '/')[1]), '2020-11-01').addressPrefix, ''), if(not(empty(variables('ShellScriptObj').WindowsSubnetName)), reference(resourceId('Microsoft.Network/virtualNetworks/subnets', split(variables('ShellScriptObj').WindowsSubnetName, '/')[0], split(variables('ShellScriptObj').WindowsSubnetName, '/')[1]), '2020-11-01').addressPrefix, '1.1.1.1/32'), reference(resourceId('Microsoft.Network/publicIPAddresses', variables('publicIPAddressName'))).properties.ipAddress, variables('ShellScriptObj').opnSenseSecondarytrustedNicIP)]"
            }
        },
        "dependsOn": [
            "[resourceId('Microsoft.Compute/virtualMachines', variables('virtualMachineName'))]"
        ]
    }
  ]
}