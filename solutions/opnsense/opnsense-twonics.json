{
  "$schema": "https://schema.management.azure.com/schemas/2019-04-01/deploymentTemplate.json#",
  "contentVersion": "1.0.0.0",
  "parameters": {
    "virtualMachineSize": {
      "type": "string",
      "defaultValue": "Standard_B2s",
      "metadata": {
        "description": "VM size, please choose a size which allow 2 NICs."
      }
    },
    "virtualNetworkRgName": {
        "type": "string"
    },
    "virtualNetworkName": {
      "type": "string",
      "defaultValue": "OPN-VNET",
      "metadata": {
        "description": "Virtual Nework Name. This is a required parameter to build a new VNet or find an existing one."
      }
    },
    "existingUntrustedSubnetName": {
      "type": "string",
      "defaultValue": "",
      "metadata": {
        "description": "Untrusted-Subnet Name. Only required if you want to use an existing VNet and Subnet."
      }
    },
    "existingTrustedSubnetName": {
      "type": "string",
      "defaultValue": "",
      "metadata": {
        "description": "Trusted-Subnet Name. Only required if you want to use an existing VNet and Subnet."
      }
    },
    "PublicIPAddressSku": {
      "type": "string",
      "defaultValue": "Standard",
      "allowedValues": [
        "Basic",
        "Standard"
      ],
      "metadata": {
        "description": "Specify Public IP SKU either Basic (lowest cost) or Standard (Required for HA LB)\""
      }
    },
    "Location": {
      "type": "string",
      "defaultValue": "[resourceGroup().location]"
    }
  },
  "variables": {
    "virtualMachineName": "NVA",
    "TempUsername": "azureuser",
    "TempPassword": "[guid(subscription().id, resourceGroup().id)]",
    "publicIPAddressName": "[format('{0}-PIP', variables('virtualMachineName'))]",
    "OpnScriptURI": "https://raw.githubusercontent.com/jdmsft/arm/main/solutions/opnsense/config/nva/",
    "ShellScriptName": "configureopnsense.sh"
  },
  "resources": [
    {
      "type": "Microsoft.Resources/deployments",
      "apiVersion": "2020-10-01",
      "name": "[variables('publicIPAddressName')]",
      "properties": {
        "expressionEvaluationOptions": {
          "scope": "inner"
        },
        "mode": "Incremental",
        "parameters": {
          "location": {
            "value": "[parameters('Location')]"
          },
          "publicipName": {
            "value": "[variables('publicIPAddressName')]"
          },
          "publicipproperties": {
            "value": {
              "publicIPAllocationMethod": "Static"
            }
          },
          "publicipsku": {
            "value": {
              "name": "[parameters('PublicIPAddressSku')]",
              "tier": "Regional"
            }
          }
        },
        "template": {
          "$schema": "https://schema.management.azure.com/schemas/2019-04-01/deploymentTemplate.json#",
          "contentVersion": "1.0.0.0",
          "parameters": {
            "publicipName": {
              "type": "string"
            },
            "publicipsku": {
              "type": "object"
            },
            "publicipproperties": {
              "type": "object"
            },
            "location": {
              "type": "string",
              "defaultValue": "[resourceGroup().location]"
            }
          },
          "resources": [
            {
              "type": "Microsoft.Network/publicIPAddresses",
              "apiVersion": "2021-02-01",
              "name": "[parameters('publicipName')]",
              "location": "[parameters('location')]",
              "sku": "[parameters('publicipsku')]",
              "properties": "[parameters('publicipproperties')]"
            }
          ],
          "outputs": {
            "publicipId": {
              "type": "string",
              "value": "[resourceId('Microsoft.Network/publicIPAddresses', parameters('publicipName'))]"
            },
            "publicipAddress": {
              "type": "string",
              "value": "[reference(resourceId('Microsoft.Network/publicIPAddresses', parameters('publicipName'))).ipAddress]"
            }
          }
        }
      }
    },
    {
      "type": "Microsoft.Resources/deployments",
      "apiVersion": "2020-10-01",
      "name": "[variables('virtualMachineName')]",
      "properties": {
        "expressionEvaluationOptions": {
          "scope": "inner"
        },
        "mode": "Incremental",
        "parameters": {
          "Location": {
            "value": "[parameters('Location')]"
          },
          "ShellScriptObj": {
            "value": {
              "OpnScriptURI": "[variables('OpnScriptURI')]",
              "OpnType": "TwoNics",
              "TrustedSubnetName": "[resourceId(parameters('virtualNetworkRgName'), 'Microsoft.Network/virtualNetworks/subnets', parameters('virtualNetworkName'), parameters('existingTrustedSubnetName'))]",
              "WindowsSubnetName": "",
              "publicIPAddress": "",
              "opnSenseSecondarytrustedNicIP": ""
            }
          },
          "OPNScriptURI": {
            "value": "[variables('OpnScriptURI')]"
          },
          "ShellScriptName": {
            "value": "[variables('ShellScriptName')]"
          },
          "TempPassword": {
            "value": "[variables('TempPassword')]"
          },
          "TempUsername": {
            "value": "[variables('TempUsername')]"
          },
          "multiNicSupport": {
            "value": true
          },
          "trustedSubnetId": {
            "value": "[resourceId(parameters('virtualNetworkRgName'), 'Microsoft.Network/virtualNetworks/subnets', parameters('virtualNetworkName'), parameters('existingTrustedSubnetName'))]"
          },
          "untrustedSubnetId": {
            "value": "[resourceId(parameters('virtualNetworkRgName'), 'Microsoft.Network/virtualNetworks/subnets', parameters('virtualNetworkName'), parameters('existingUntrustedSubnetName'))]"
          },
          "virtualMachineName": {
            "value": "[variables('virtualMachineName')]"
          },
          "virtualMachineSize": {
            "value": "[parameters('virtualMachineSize')]"
          },
          "publicIPId": {
            "value": "[reference(resourceId('Microsoft.Resources/deployments', variables('publicIPAddressName'))).outputs.publicipId.value]"
          }
        },
        "template": {
          "$schema": "https://schema.management.azure.com/schemas/2019-04-01/deploymentTemplate.json#",
          "contentVersion": "1.0.0.0",
          "parameters": {
            "untrustedSubnetId": {
              "type": "string"
            },
            "trustedSubnetId": {
              "type": "string",
              "defaultValue": ""
            },
            "publicIPId": {
              "type": "string",
              "defaultValue": ""
            },
            "virtualMachineName": {
              "type": "string"
            },
            "TempUsername": {
              "type": "string"
            },
            "TempPassword": {
              "type": "string"
            },
            "virtualMachineSize": {
              "type": "string"
            },
            "OPNScriptURI": {
              "type": "string"
            },
            "ShellScriptName": {
              "type": "string"
            },
            "nsgId": {
              "type": "string",
              "defaultValue": ""
            },
            "ExternalLoadBalancerBackendAddressPoolId": {
              "type": "string",
              "defaultValue": ""
            },
            "InternalLoadBalancerBackendAddressPoolId": {
              "type": "string",
              "defaultValue": ""
            },
            "ExternalloadBalancerInboundNatRulesId": {
              "type": "string",
              "defaultValue": ""
            },
            "ShellScriptObj": {
              "type": "object",
              "defaultValue": {}
            },
            "multiNicSupport": {
              "type": "bool"
            },
            "Location": {
              "type": "string",
              "defaultValue": "[resourceGroup().location]"
            }
          },
          "variables": {
            "untrustedNicName": "[format('{0}-Untrusted-NIC', parameters('virtualMachineName'))]",
            "trustedNicName": "[format('{0}-Trusted-NIC', parameters('virtualMachineName'))]"
          },
          "resources": [
            {
              "type": "Microsoft.Compute/virtualMachines",
              "apiVersion": "2021-03-01",
              "name": "[parameters('virtualMachineName')]",
              "location": "[parameters('Location')]",
              "properties": {
                "osProfile": {
                  "computerName": "[parameters('virtualMachineName')]",
                  "adminUsername": "[parameters('TempUsername')]",
                  "adminPassword": "[parameters('TempPassword')]"
                },
                "hardwareProfile": {
                  "vmSize": "[parameters('virtualMachineSize')]"
                },
                "storageProfile": {
                  "osDisk": {
                    "name": "[concat(parameters('virtualMachineName'),'-OSDisk')]",
                    "createOption": "FromImage"
                  },
                  "imageReference": {
                    "publisher": "thefreebsdfoundation",
                    "offer": "freebsd-13_0",
                    "sku": "13_0-release",
                    "version": "latest"
                  }
                },
                "networkProfile": {
                  "networkInterfaces": "[if(equals(parameters('multiNicSupport'), true()), createArray(createObject('id', reference(resourceId('Microsoft.Resources/deployments', variables('untrustedNicName'))).outputs.nicId.value, 'properties', createObject('primary', true())), createObject('id', reference(resourceId('Microsoft.Resources/deployments', variables('trustedNicName')), '2020-10-01').outputs.nicId.value, 'properties', createObject('primary', false()))), createArray(createObject('id', reference(resourceId('Microsoft.Resources/deployments', variables('untrustedNicName'))).outputs.nicId.value, 'properties', createObject('primary', true()))))]"
                }
              },
              "plan": {
                "name": "13_0-release",
                "publisher": "thefreebsdfoundation",
                "product": "freebsd-13_0"
              },
              "dependsOn": [
                "[resourceId('Microsoft.Resources/deployments', variables('trustedNicName'))]",
                "[resourceId('Microsoft.Resources/deployments', variables('untrustedNicName'))]"
              ]
            },
            {
              "type": "Microsoft.Compute/virtualMachines/extensions",
              "apiVersion": "2015-06-15",
              "name": "[format('{0}/CustomScript', parameters('virtualMachineName'))]",
              "location": "[parameters('Location')]",
              "properties": {
                "publisher": "Microsoft.OSTCExtensions",
                "type": "CustomScriptForLinux",
                "typeHandlerVersion": "1.5",
                "autoUpgradeMinorVersion": false,
                "settings": {
                  "fileUris": [
                    "[format('{0}{1}', parameters('OPNScriptURI'), parameters('ShellScriptName'))]"
                  ],
                  "commandToExecute": "[format('sh {0} {1} {2} {3} {4} {5} {6}', parameters('ShellScriptName'), parameters('ShellScriptObj').OpnScriptURI, parameters('ShellScriptObj').OpnType, if(not(empty(parameters('ShellScriptObj').TrustedSubnetName)), reference(resourceId('Microsoft.Network/virtualNetworks/subnets', split(parameters('ShellScriptObj').TrustedSubnetName, '/')[0], split(parameters('ShellScriptObj').TrustedSubnetName, '/')[1]), '2020-11-01').addressPrefix, ''), if(not(empty(parameters('ShellScriptObj').WindowsSubnetName)), reference(resourceId('Microsoft.Network/virtualNetworks/subnets', split(parameters('ShellScriptObj').WindowsSubnetName, '/')[0], split(parameters('ShellScriptObj').WindowsSubnetName, '/')[1]), '2020-11-01').addressPrefix, '1.1.1.1/32'), parameters('ShellScriptObj').publicIPAddress, parameters('ShellScriptObj').opnSenseSecondarytrustedNicIP)]"
                }
              },
              "dependsOn": [
                "[resourceId('Microsoft.Compute/virtualMachines', parameters('virtualMachineName'))]"
              ]
            },
            {
              "type": "Microsoft.Resources/deployments",
              "apiVersion": "2020-10-01",
              "name": "[variables('untrustedNicName')]",
              "properties": {
                "expressionEvaluationOptions": {
                  "scope": "inner"
                },
                "mode": "Incremental",
                "parameters": {
                  "Location": {
                    "value": "[parameters('Location')]"
                  },
                  "nicName": {
                    "value": "[variables('untrustedNicName')]"
                  },
                  "subnetId": {
                    "value": "[parameters('untrustedSubnetId')]"
                  },
                  "publicIPId": {
                    "value": "[parameters('publicIPId')]"
                  },
                  "enableIPForwarding": {
                    "value": true
                  },
                  "nsgId": {
                    "value": "[parameters('nsgId')]"
                  },
                  "loadBalancerBackendAddressPoolId": {
                    "value": "[parameters('ExternalLoadBalancerBackendAddressPoolId')]"
                  },
                  "loadBalancerInboundNatRules": {
                    "value": "[parameters('ExternalloadBalancerInboundNatRulesId')]"
                  }
                },
                "template": {
                  "$schema": "https://schema.management.azure.com/schemas/2019-04-01/deploymentTemplate.json#",
                  "contentVersion": "1.0.0.0",
                  "metadata": {
                    "_generator": {
                      "name": "bicep",
                      "version": "0.10.61.36676",
                      "templateHash": "7355538175549246480"
                    }
                  },
                  "parameters": {
                    "subnetId": {
                      "type": "string"
                    },
                    "publicIPId": {
                      "type": "string",
                      "defaultValue": ""
                    },
                    "enableIPForwarding": {
                      "type": "bool",
                      "defaultValue": false
                    },
                    "nicName": {
                      "type": "string"
                    },
                    "nsgId": {
                      "type": "string",
                      "defaultValue": ""
                    },
                    "loadBalancerBackendAddressPoolId": {
                      "type": "string",
                      "defaultValue": ""
                    },
                    "loadBalancerInboundNatRules": {
                      "type": "string",
                      "defaultValue": ""
                    },
                    "Location": {
                      "type": "string",
                      "defaultValue": "[resourceGroup().location]"
                    }
                  },
                  "resources": [
                    {
                      "type": "Microsoft.Network/networkInterfaces",
                      "apiVersion": "2021-05-01",
                      "name": "[parameters('nicName')]",
                      "location": "[parameters('Location')]",
                      "properties": {
                        "enableIPForwarding": "[parameters('enableIPForwarding')]",
                        "ipConfigurations": [
                          {
                            "name": "ipconfig1",
                            "properties": {
                              "subnet": {
                                "id": "[parameters('subnetId')]"
                              },
                              "privateIPAllocationMethod": "Dynamic",
                              "publicIPAddress": "[if(equals(first(parameters('publicIPId')), '/'), createObject('id', parameters('publicIPId')), null())]",
                              "loadBalancerBackendAddressPools": "[if(equals(first(parameters('loadBalancerBackendAddressPoolId')), '/'), createArray(createObject('id', parameters('loadBalancerBackendAddressPoolId'))), null())]",
                              "loadBalancerInboundNatRules": "[if(equals(first(parameters('loadBalancerInboundNatRules')), '/'), createArray(createObject('id', parameters('loadBalancerInboundNatRules'))), null())]"
                            }
                          }
                        ]
                      }
                    }
                  ],
                  "outputs": {
                    "nicName": {
                      "type": "string",
                      "value": "[parameters('nicName')]"
                    },
                    "nicId": {
                      "type": "string",
                      "value": "[resourceId('Microsoft.Network/networkInterfaces', parameters('nicName'))]"
                    },
                    "nicIP": {
                      "type": "string",
                      "value": "[reference(resourceId('Microsoft.Network/networkInterfaces', parameters('nicName'))).ipConfigurations[0].properties.privateIPAddress]"
                    },
                    "nicIpConfigurationId": {
                      "type": "string",
                      "value": "[reference(resourceId('Microsoft.Network/networkInterfaces', parameters('nicName'))).ipConfigurations[0].id]"
                    }
                  }
                }
              }
            },
            {
              "condition": "[parameters('multiNicSupport')]",
              "type": "Microsoft.Resources/deployments",
              "apiVersion": "2020-10-01",
              "name": "[variables('trustedNicName')]",
              "properties": {
                "expressionEvaluationOptions": {
                  "scope": "inner"
                },
                "mode": "Incremental",
                "parameters": {
                  "Location": {
                    "value": "[parameters('Location')]"
                  },
                  "nicName": {
                    "value": "[variables('trustedNicName')]"
                  },
                  "subnetId": {
                    "value": "[parameters('trustedSubnetId')]"
                  },
                  "enableIPForwarding": {
                    "value": true
                  },
                  "nsgId": {
                    "value": "[parameters('nsgId')]"
                  },
                  "loadBalancerBackendAddressPoolId": {
                    "value": "[parameters('InternalLoadBalancerBackendAddressPoolId')]"
                  }
                },
                "template": {
                  "$schema": "https://schema.management.azure.com/schemas/2019-04-01/deploymentTemplate.json#",
                  "contentVersion": "1.0.0.0",
                  "metadata": {
                    "_generator": {
                      "name": "bicep",
                      "version": "0.10.61.36676",
                      "templateHash": "7355538175549246480"
                    }
                  },
                  "parameters": {
                    "subnetId": {
                      "type": "string"
                    },
                    "publicIPId": {
                      "type": "string",
                      "defaultValue": ""
                    },
                    "enableIPForwarding": {
                      "type": "bool",
                      "defaultValue": false
                    },
                    "nicName": {
                      "type": "string"
                    },
                    "nsgId": {
                      "type": "string",
                      "defaultValue": ""
                    },
                    "loadBalancerBackendAddressPoolId": {
                      "type": "string",
                      "defaultValue": ""
                    },
                    "loadBalancerInboundNatRules": {
                      "type": "string",
                      "defaultValue": ""
                    },
                    "Location": {
                      "type": "string",
                      "defaultValue": "[resourceGroup().location]"
                    }
                  },
                  "resources": [
                    {
                      "type": "Microsoft.Network/networkInterfaces",
                      "apiVersion": "2021-05-01",
                      "name": "[parameters('nicName')]",
                      "location": "[parameters('Location')]",
                      "properties": {
                        "enableIPForwarding": "[parameters('enableIPForwarding')]",
                        "ipConfigurations": [
                          {
                            "name": "ipconfig1",
                            "properties": {
                              "subnet": {
                                "id": "[parameters('subnetId')]"
                              },
                              "privateIPAllocationMethod": "Dynamic",
                              "publicIPAddress": "[if(equals(first(parameters('publicIPId')), '/'), createObject('id', parameters('publicIPId')), null())]",
                              "loadBalancerBackendAddressPools": "[if(equals(first(parameters('loadBalancerBackendAddressPoolId')), '/'), createArray(createObject('id', parameters('loadBalancerBackendAddressPoolId'))), null())]",
                              "loadBalancerInboundNatRules": "[if(equals(first(parameters('loadBalancerInboundNatRules')), '/'), createArray(createObject('id', parameters('loadBalancerInboundNatRules'))), null())]"
                            }
                          }
                        ]
                      }
                    }
                  ],
                  "outputs": {
                    "nicName": {
                      "type": "string",
                      "value": "[parameters('nicName')]"
                    },
                    "nicId": {
                      "type": "string",
                      "value": "[resourceId('Microsoft.Network/networkInterfaces', parameters('nicName'))]"
                    },
                    "nicIP": {
                      "type": "string",
                      "value": "[reference(resourceId('Microsoft.Network/networkInterfaces', parameters('nicName'))).ipConfigurations[0].properties.privateIPAddress]"
                    },
                    "nicIpConfigurationId": {
                      "type": "string",
                      "value": "[reference(resourceId('Microsoft.Network/networkInterfaces', parameters('nicName'))).ipConfigurations[0].id]"
                    }
                  }
                }
              }
            }
          ],
          "outputs": {
            "untrustedNicIP": {
              "type": "string",
              "value": "[reference(resourceId('Microsoft.Resources/deployments', variables('untrustedNicName'))).outputs.nicIP.value]"
            },
            "trustedNicIP": {
              "type": "string",
              "value": "[if(equals(parameters('multiNicSupport'), true()), reference(resourceId('Microsoft.Resources/deployments', variables('trustedNicName')), '2020-10-01').outputs.nicIP.value, '')]"
            },
            "untrustedNicProfileId": {
              "type": "string",
              "value": "[reference(resourceId('Microsoft.Resources/deployments', variables('untrustedNicName'))).outputs.nicIpConfigurationId.value]"
            }
          }
        }
      },
      "dependsOn": [
        "[resourceId('Microsoft.Resources/deployments', variables('publicIPAddressName'))]"
      ]
    }
  ]
}